{{- if and .Values.database.internal (eq .Values.database.type "internal") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "website-template.fullname" . }}-mysql
  labels:
    {{- include "website-template.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "website-template.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "website-template.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "website-template.fullname" . }}-secrets
                  key: db-password
            - name: MYSQL_DATABASE
              value: {{ include "website-template.databaseName" . }}
            - name: MYSQL_USER
              value: {{ .Values.admin.username }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "website-template.fullname" . }}-secrets
                  key: admin-password
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: {{ include "website-template.fullname" . }}-mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "website-template.fullname" . }}-mysql
  labels:
    {{- include "website-template.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: mysql
      protocol: TCP
      name: mysql
  selector:
    {{- include "website-template.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: database
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "website-template.fullname" . }}-mysql-pvc
  labels:
    {{- include "website-template.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.database.storage | default "5Gi" }}
  {{- if .Values.persistence.storageClass }}
  storageClassName: "{{ .Values.persistence.storageClass }}"
  {{- end }}
{{- end }}
